name: Deploy

on:
  workflow_run:
    workflows: ['Semantic Release']
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment:
      name: Production
      url: ${{ steps.verify_deployment.outputs.deploy_url }}
    steps:
      - name: ðŸ›’ Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Deploy to Production
        uses: ./.github/actions/deploy
        with:
          environment: 'Production'
          paas_url: ${{ secrets.PAAS_URL }}
          paas_uuid: ${{ secrets.PAAS_UUID }}
          paas_api_key: ${{ secrets.PAAS_API_KEY }}

      - name: Wait for and verify deployment
        id: verify_deployment
        run: |
          # Get application details for URL
          APP_DETAILS=$(curl -s -X GET \
            "${{ secrets.PAAS_URL }}/api/v1/applications/${{ secrets.PAAS_UUID }}" \
            -H "Authorization: Bearer ${{ secrets.PAAS_API_KEY }}")

          # Extract FQDN or preview URL
          FQDN=$(echo $APP_DETAILS | jq -r '.fqdn')
          PREVIEW_URL=$(echo $APP_DETAILS | jq -r '.previewUrl')

          if [[ "$FQDN" != "null" && ! -z "$FQDN" ]]; then
            DEPLOY_URL="$FQDN"
          elif [[ "$PREVIEW_URL" != "null" && ! -z "$PREVIEW_URL" ]]; then
            DEPLOY_URL="$PREVIEW_URL"
          else
            DEPLOY_URL="${{ secrets.PAAS_URL }}/applications/${{ secrets.PAAS_UUID }}"
          fi

          # Set URL as output
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT
