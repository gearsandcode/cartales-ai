name: Update Vercel Badge

on: deployment_status

jobs:
  update-badge:
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.deployment.ref }}

      - name: Get Vercel Preview URL
        id: get-preview-url
        run: |
          PREVIEW_URL="${{ github.event.deployment_status.target_url }}"
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Update README with new URL
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read the current README
            const readmePath = path.join(process.env.GITHUB_WORKSPACE, 'README.md');
            let content = fs.readFileSync(readmePath, 'utf8');

            // Update the preview badge URL
            const newContent = content.replace(
              /\]\(https:\/\/vercel\.com\/gearsandcode\/cartales-ai\/deployments\)/,
              `](${process.env.PREVIEW_URL})`
            );

            if (content !== newContent) {
              try {
                // Get the current commit's branch
                const { data: refs } = await github.rest.git.listMatchingRefs({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: 'heads/'
                });
                
                // Find the branch that contains our commit
                const sha = context.payload.deployment.sha;
                for (const ref of refs) {
                  const { data: commit } = await github.rest.git.getCommit({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    commit_sha: ref.object.sha
                  });
                  
                  if (commit.sha === sha) {
                    const branch = ref.ref.replace('refs/heads/', '');
                    console.log(`Found branch: ${branch} for commit ${sha}`);
                    
                    // Get the current file's SHA
                    const { data: file } = await github.rest.repos.getContent({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      path: 'README.md',
                      ref: branch
                    });
                    
                    // Update the file
                    await github.rest.repos.createOrUpdateFileContents({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      path: 'README.md',
                      message: 'Update Vercel preview badge URL [skip ci]',
                      content: Buffer.from(newContent).toString('base64'),
                      sha: file.sha,
                      branch: branch
                    });
                    
                    console.log('Successfully updated README.md');
                    break;
                  }
                }
              } catch (error) {
                console.error('Error updating file:', error);
                process.exit(1);
              }
            } else {
              console.log('No changes needed in README.md');
            }
        env:
          PREVIEW_URL: ${{ steps.get-preview-url.outputs.preview_url }}
