name: 'Deploy to PAAS'
description: 'Deploys the application to the PAAS platform'

inputs:
  environment:
    description: 'Environment to deploy to'
    required: false
    default: 'Production'
  paas_url:
    description: 'PAAS platform URL'
    required: true
  paas_uuid:
    description: 'Application UUID in PAAS'
    required: true
  paas_api_key:
    description: 'API key for PAAS authentication'
    required: true

outputs:
  app_url:
    description: 'The deployed application URL'
    value: ${{ steps.get-app-details.outputs.app_url }}

runs:
  using: 'composite'
  steps:
    - name: Trigger deployment via webhook
      id: trigger-deployment
      shell: bash
      run: |
        curl -X GET \
          "${{ inputs.paas_url }}/api/v1/deploy?uuid=${{ inputs.paas_uuid }}&force=false" \
          -H "Authorization: Bearer ${{ inputs.paas_api_key }}"

    - name: Get application details and URL
      id: get-app-details
      shell: bash
      run: |
        # Install jq if not available
        if ! command -v jq &> /dev/null; then
          echo "Installing jq for JSON parsing..."
          apt-get update && apt-get install -y jq
        fi

        # Fetch application details
        APP_DETAILS=$(curl -s -X GET \
          "${{ inputs.paas_url }}/api/v1/applications/${{ inputs.paas_uuid }}" \
          -H "Authorization: Bearer ${{ inputs.paas_api_key }}")

        # Extract FQDN (Fully Qualified Domain Name) if available
        FQDN=$(echo $APP_DETAILS | jq -r '.fqdn // "Not configured"')
        if [[ "$FQDN" != "Not configured" && "$FQDN" != "null" ]]; then
          echo "app_url=$FQDN" >> $GITHUB_OUTPUT
        fi
